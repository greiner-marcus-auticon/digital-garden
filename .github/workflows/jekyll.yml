name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"] # This workflow will run when there's a push to the "main" branch
  workflow_dispatch: # This allows the workflow to be manually triggered from the GitHub Actions UI

permissions:
  contents: read # This workflow has read access to the repository contents

concurrency:
  group: "pages"
  cancel-in-progress: false # If a new run is triggered, the previous run will not be cancelled

jobs:
  build:
    runs-on: self-hosted # This workflow will run on a self-hosted runner
    steps:
      - name: Checkout
        uses: actions/checkout@v3 # This step checks out the repository code
      - name: Install Chocolatey
        run: |
          # This step installs Chocolatey, a package manager for Windows
          # Set the PowerShell execution policy to Bypass in the current process, allowing scripts to run
          Set-ExecutionPolicy Bypass -Scope Process -Force;
          # Set the security protocol to use TLS 1.2 for outgoing connections in the current PowerShell session
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
          # Download the Chocolatey installation script and execute it
          Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

      - name: Install Ruby
        run: |
          # This step installs Ruby using Chocolatey
          # Install Ruby version 3.2.2
          choco install ruby --version=3.2.2 -y
          # Refresh the environment variables to include the newly installed Ruby in the PATH
          refreshenv
          # Print the Ruby version to verify the installation
          ruby -v

      - name: Ensure Bundler 2.2.18
        run: gem install bundler -v '2.2.18' # This step installs a specific version of Bundler, a Ruby gem manager

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3 # This step sets up GitHub Pages

      - name: Build with Jekyll
        run: bundle _2.2.18_ exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" # This step builds the Jekyll site
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-artifact@v2 # This step uploads the built site as an artifact
        with:
          name: jekyll-site
          path: ./_site

  test:
    runs-on: self-hosted
    needs: build # This job depends on the "build" job
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2 # This step downloads the artifact uploaded in the "build" job
        with:
          name: jekyll-site
          path: ./_site

      - name: List files
        run: ls -R ./_site # This step lists all the files in the downloaded artifact
